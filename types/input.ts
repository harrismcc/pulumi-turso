// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface DatabaseDatabase {
    /**
     * The current status for allowing the database to be attached to another.
     */
    allowAttach?: pulumi.Input<boolean>;
    /**
     * The current status of the database. If `true`, the database is archived and requires a manual unarchive step.
     */
    archived?: pulumi.Input<boolean>;
    /**
     * The current status for blocked reads.
     */
    blockReads?: pulumi.Input<boolean>;
    /**
     * The current status for blocked writes.
     */
    blockWrites?: pulumi.Input<boolean>;
    /**
     * The database universal unique identifier (UUID).
     */
    dbId?: pulumi.Input<string>;
    /**
     * The name of the group the database belongs to.
     */
    group?: pulumi.Input<string>;
    /**
     * The DNS hostname used for client libSQL and HTTP connections.
     */
    hostname?: pulumi.Input<string>;
    /**
     * If this database controls other child databases then this will be `true`. See [Multi-DB Schemas](https://www.terraform.io/features/multi-db-schemas).
     */
    isSchema?: pulumi.Input<boolean>;
    /**
     * The database name, **unique** across your organization.
     */
    name?: pulumi.Input<string>;
    /**
     * The primary region location code the group the database belongs to.
     */
    primaryRegion?: pulumi.Input<string>;
    /**
     * A list of regions for the group the database belongs to.
     */
    regions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the parent database that owns the schema for this database. See [Multi-DB Schemas](https://www.terraform.io/features/multi-db-schemas).
     */
    schema?: pulumi.Input<string>;
    /**
     * The string representing the object type.
     */
    type?: pulumi.Input<string>;
    /**
     * The current libSQL version the database is running.
     */
    version?: pulumi.Input<string>;
}

export interface DatabaseSeed {
    /**
     * The name of the existing database when `database` is used as a seed type.
     */
    name?: pulumi.Input<string>;
    /**
     * A formatted [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) recovery point to create a database from. This must be within the last 24 hours, or 30 days on the scaler plan.
     */
    timestamp?: pulumi.Input<string>;
    /**
     * The type of seed to be used to create a new database.
     */
    type?: pulumi.Input<string>;
    /**
     * The URL returned by [upload dump](https://www.terraform.io/api-reference/databases/upload-dump) can be used with the `dump` seed type.
     */
    url?: pulumi.Input<string>;
}

export interface GroupGroup {
    /**
     * Groups on the free tier get archived after some inactivity.
     */
    archived?: pulumi.Input<boolean>;
    /**
     * An array of location keys the group is located.
     */
    locations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The group name, unique across your organization.
     */
    name?: pulumi.Input<string>;
    /**
     * The primary location key.
     */
    primary?: pulumi.Input<string>;
    /**
     * The group universal unique identifier (UUID).
     */
    uuid?: pulumi.Input<string>;
    /**
     * The current libSQL server version the databases in that group are running.
     */
    version?: pulumi.Input<string>;
}
